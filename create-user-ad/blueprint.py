# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import *  # no_qa


# Secret Variables

BP_CRED_DOMAIN_CRED_PASSWORD = read_local_file("BP_CRED_DOMAIN_CRED_PASSWORD")
Profile_Default_variable_Password = read_local_file("Profile_Default_variable_Password")

# Credentials
BP_CRED_DOMAIN_CRED = basic_cred(
    "Administrator@phx-poc087.nutanix.local",
    BP_CRED_DOMAIN_CRED_PASSWORD,
    name="DOMAIN_CRED",
    type="PASSWORD",
    default=True,
)


class Service1(Service):

    pass


class VM1(Substrate):

    os_type = "Windows"
    provider_type = "EXISTING_VM"
    provider_spec = read_provider_spec(os.path.join("specs", "VM1_provider_spec.yaml"))

    readiness_probe = readiness_probe(
        connection_type="POWERSHELL",
        disabled=True,
        retries="5",
        connection_port=5985,
        address="@@{ip_address}@@",
        delay_secs="60",
        credential=ref(BP_CRED_DOMAIN_CRED),
    )


class Package1(Package):

    services = [ref(Service1)]

    @action
    def __install__():

        CalmTask.Exec.powershell(
            name="Create User",
            filename=os.path.join(
                "scripts", "Package_Package1_Action___install___Task_CreateUser.ps1"
            ),
            target=ref(Service1),
        )

    @action
    def __uninstall__():

        CalmTask.Exec.powershell(
            name="Remove User",
            filename=os.path.join(
                "scripts", "Package_Package1_Action___uninstall___Task_RemoveUser.ps1"
            ),
            cred=ref(BP_CRED_DOMAIN_CRED),
            target=ref(Service1),
        )


class _275097d7_deployment(Deployment):

    name = "275097d7_deployment"
    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Package1)]
    substrate = ref(VM1)


class Default(Profile):

    deployments = [_275097d7_deployment]

    DomainName = CalmVariable.Simple(
        "ntnxlab.local",
        label="Please key in the Domain Name",
        is_mandatory=True,
        is_hidden=False,
        runtime=True,
        description="",
    )

    Password = CalmVariable.Simple.Secret(
        Profile_Default_variable_Password,
        label="",
        is_mandatory=True,
        is_hidden=False,
        runtime=True,
        description="",
    )

    userPrincipalName = CalmVariable.Simple(
        "",
        label="Please key in the User Principal Name",
        is_mandatory=False,
        is_hidden=True,
        runtime=False,
        description="",
    )

    mailNickName = CalmVariable.Simple(
        "",
        label="Please key in the Mail Nick Name",
        is_mandatory=True,
        is_hidden=False,
        runtime=True,
        description="",
    )

    displayName = CalmVariable.Simple(
        "",
        label="Please key in the Display Name",
        is_mandatory=True,
        is_hidden=False,
        runtime=True,
        description="",
    )


class CreateUserinActiveDirectory(Blueprint):

    services = [Service1]
    packages = [Package1]
    substrates = [VM1]
    profiles = [Default]
    credentials = [BP_CRED_DOMAIN_CRED]
